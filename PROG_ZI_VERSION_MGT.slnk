<?xml version="1.0" encoding="utf-16"?>
<PROG NAME="ZI_VERSION_MGT" VARCL="X" SUBC="1" APPL="B" CNAM="WXF7600" CDAT="20120105" UNAM="WXF7600" UDAT="20120123" VERN="000007" RSTAT="P" RMAND="001" RLOAD="E" FIXPT="X" SDATE="20120123" STIME="111525" IDATE="20120123" ITIME="111525" UCCHECK="X">
 <textPool>
  <language SPRAS="E">
   <textElement ID="R" ENTRY="Version management" LENGTH="18 "/>
   <textElement ID="S" KEY="P_DEVCL" ENTRY="        Package" LENGTH="15 "/>
   <textElement ID="S" KEY="P_ID" ENTRY="        Manual selection WB/QR id&apos;s" LENGTH="35 "/>
   <textElement ID="S" KEY="P_QR" ENTRY="        Query" LENGTH="13 "/>
   <textElement ID="S" KEY="P_REL" ENTRY="        Release transport(s)" LENGTH="28 "/>
   <textElement ID="S" KEY="P_TARGET" ENTRY="        Target System" LENGTH="21 "/>
   <textElement ID="S" KEY="P_WB" ENTRY="        Workbook" LENGTH="16 "/>
  </language>
  <language SPRAS="N">
   <textElement ID="R" ENTRY="Version management" LENGTH="18 "/>
  </language>
 </textPool>
 <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZI_VERSION_MGT
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;
*&amp;---------------------------------------------------------------------*

REPORT  ZI_VERSION_MGT.

*********************
* Data declarations *
*********************

type-pools : RZD1, RRMX, TRWBO.

tables : E071, tadir, RSRWBINDEXT, RSZELTTXT, RSZCOMPDIR, E070.

data : l_th_eltdir           TYPE rzd1_th_eltdir.
data : h_compid             TYPE rszcompid.
data : i_t_qi type rrmx_t_query_info.
data : as4pos like e071-as4pos.
data : request type TRWBO_REQUEST_HEADER.
data : begin of itab occurs 0.
include type  RRMX_S_QUERY_INFO.
data : end of itab.
data : begin of itab2 occurs 0.
include type rzd1_s_eltdir.
data : end of itab2.
data : first_time_vlag.
data : typetext(20).
data : string(200).
data : wb like RSRWORKBOOK-WORKBOOKID.
data : qu like RSRWORKBOOK-WORKBOOKID.
data : begin of seltab occurs 0.
data : i_compid             TYPE rszcompid.
data : end of seltab.
data : linecounter type i.
data : text(60) type c.
data: w_id(30) type c.
***************************
* Selection-screen        *
***************************

SELECTION-SCREEN BEGIN OF BLOCK sel1
                          WITH FRAME TITLE text-001.

SELECT-OPTIONS :

p_id for w_id no intervals.

PARAMETERS :
   p_wb   RADIOBUTTON GROUP gr1,
   p_qr   RADIOBUTTON GROUP gr1 default &apos;X&apos;.

SELECTION-SCREEN END OF BLOCK sel1.

SELECTION-SCREEN BEGIN OF BLOCK sel2
                          WITH FRAME TITLE text-002.
SELECT-OPTIONS :

p_target for e070-tarsystem obligatory no intervals default &apos;BIT.001&apos;,
p_devcl for tadir-devclass obligatory no intervals default &apos;ZBW&apos;.
parameters p_rel as checkbox.

SELECTION-SCREEN END OF BLOCK sel2.


**************************************
* Program Logic                      *
**************************************

loop at p_id.

***************************************
* Radio button : query or workbook ?  *
***************************************

  if p_qr eq &apos;X&apos;.     &quot;Query selected

    clear text.
    text = &apos;Query &apos;.

* Select your query

    h_compid = p_id-low.

    select single * from rszcompdir
    where objvers eq &apos;A&apos;
    and compid = h_compid.

    if sy-subrc eq 0.
      qu = rszcompdir-compuid.
    endif.

    perform druk_header using qu.

    itab-compuid = qu.
    append itab.

  else.               &quot;Workbook selected

    clear text.
    text = &apos;Workbook&apos;.

* Select your workbook

    h_compid = p_id-low.

    wb = h_compid.

    perform druk_header using wb.

* Get all queries related to workbook

    CALL FUNCTION &apos;RRMX_WORKBOOK_QUERIES_GET&apos;
      EXPORTING
        I_WORKBOOKID                   = wb
        I_OBJVERS                      = RS_C_OBJVERS-ACTIVE
*   I_ACTVT                        =
     IMPORTING
       E_T_QUERY_INFO                 = i_t_qi
* EXCEPTIONS
*   NO_WORKBOOK_ID_SPECIFIED       = 1
*   NO_QUERY_AUTHORITIES           = 2
*   OTHERS                         = 3
              .
    IF SY-SUBRC &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    refresh : itab, itab2.

    itab[] = i_t_qi[].

  endif.


* Retrieve all components belonging to query

  loop at itab.

* Get all Query Elements and store them in l_th_eltdir

    CALL FUNCTION &apos;RSZ_DB_ELT_GET&apos;
     EXPORTING
*   I_TEMPLATE_TYPE             = RZD1_C_DEFTP-NOTHING
*   I_INFOCUBE                  =
*   I_VARIABLE_TYPES            =
*   I_VARIABLE_INFOOBJECT       =
       I_ELTUID                    = itab-compuid
*   I_LANGUAGE                  = SY-LANGU
       I_OBJVERS                   = RS_C_OBJVERS-ACTIVE
*   I_T_ELTUID                  =
       I_USE_XREF_BUFFER           = &apos;A&apos;
     IMPORTING
       E_TH_ELTDIR                 = l_th_eltdir
*   E_TH_ELTTXT                 =
*   E_TH_ELTPROP                =
*   E_TH_ELTPRIO                =
*   E_TH_ELTATTR                =
*   E_TH_ELTXREF                =
*   E_TH_COMPDIR                =
*   E_TH_COMPIC                 =
*   E_TH_CHANGES                =
*   E_TH_SELECT                 =
*   E_TH_RANGE                  =
*   E_TH_CALC                   =
*   E_TH_CEL                    =
*   E_TH_GLOBV                  =
*   E_TH_MISSING_ELEMENTS       =
* EXCEPTIONS
*   INHERITED_ERROR             = 1
*   INCONSISTENCY               = 2
*   OTHERS                      = 3
              .
    IF SY-SUBRC &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    if first_time_vlag ne &apos;X&apos;.

      concatenate text h_compid into text separated by space.


* Create transport

      CALL FUNCTION &apos;TR_INSERT_REQUEST_WITH_TASKS&apos;
        EXPORTING
          IV_TYPE                 = &apos;K&apos;
          IV_TEXT                 = text
*   IV_OWNER                = SY-UNAME
      IV_TARGET               = P_TARGET-LOW
*   IT_ATTRIBUTES           =
*   IT_USERS                =
*   IV_TARDEVCL             =
*   IV_DEVCLASS             =
*   IV_TARLAYER             =
   IMPORTING
     ES_REQUEST_HEADER       = request
*   ET_TASK_HEADERS         =
* EXCEPTIONS
*   INSERT_FAILED           = 1
*   ENQUEUE_FAILED          = 2
*   OTHERS                  = 3
                .
      IF SY-SUBRC &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ENDIF.


* Add workbook to transport request

      if p_qr ne &apos;X&apos;.

        perform add_to_transport using &apos;R3TR&apos; &apos;XLWB&apos; wb  request.

      endif.

      first_time_vlag = &apos;X&apos;.

    endif.

* Add query / queries to transport request.

    itab2[] = l_th_eltdir[].

    sort itab2 by deftp.

    loop at itab2.

      perform add_to_transport using &apos;R3TR&apos; &apos;ELEM&apos; itab2-eltuid request.

      perform druk_logging using itab2-eltuid request.

    endloop.

  endloop.

  clear first_time_vlag.

* Display generated transport request name

  write :/.
  write :/ &apos;Generated transport&apos;, request-trkorr, request-as4text.

* Check if generated transport request should be released or not

  if p_rel eq &apos;X&apos;.

    CALL FUNCTION &apos;TRINT_RELEASE_REQUEST&apos;
      EXPORTING
        IV_TRKORR                         = request-trkorr
*     IV_DIALOG                         = &apos;X&apos;
*      IV_AS_BACKGROUND_JOB              = &apos;X&apos;
*     IV_SUCCESS_MESSAGE                = &apos;X&apos;
*     IV_WITHOUT_OBJECTS_CHECK          = &apos; &apos;
*     IV_CALLED_BY_PERFORCE             = &apos; &apos;
*     IV_WITHOUT_DOCU                   = &apos; &apos;
      IV_WITHOUT_LOCKING                = &apos;X&apos;
      IV_DISPLAY_EXPORT_LOG             = &apos;&apos;
*   IMPORTING
*     ES_REQUEST                        =
*     ET_DELETED_TASKS                  =
*     ET_MESSAGES                       =
*   EXCEPTIONS
*     CTS_INITIALIZATION_FAILURE        = 1
*     ENQUEUE_FAILED                    = 2
*     NO_AUTHORIZATION                  = 3
*     INVALID_REQUEST                   = 4
*     REQUEST_ALREADY_RELEASED          = 5
*     REPEAT_TOO_EARLY                  = 6
*     OBJECT_LOCK_ERROR                 = 7
*     OBJECT_CHECK_ERROR                = 8
*     DOCU_MISSING                      = 9
*     DB_ACCESS_ERROR                   = 10
*     ACTION_ABORTED_BY_USER            = 11
*     EXPORT_FAILED                     = 12
*     EXECUTE_OBJECTS_CHECK             = 13
*     RELEASE_IN_BG_MODE                = 14
*     RELEASE_IN_BG_MODE_W_OBJCHK       = 15
*     ERROR_IN_EXPORT_METHODS           = 16
*     OBJECT_LANG_ERROR                 = 17
*     OTHERS                            = 18
              .
    IF SY-SUBRC &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.

      Write :/ &apos;Problem while releasing request&apos;, request-trkorr.


    ENDIF.


  endif.

endloop.

*&amp;---------------------------------------------------------------------*
*&amp;      Form  add_to_transport
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      --&gt;P_REQUEST  text
*----------------------------------------------------------------------*
FORM add_to_transport  USING    P_PGMID
                                P_OBJECT
                                P_TRANSTRU_LOW
                                P_TRKORR.
  select single * from e071
   where trkorr eq P_TRKORR
   and  pgmid eq P_PGMID
   and  object eq P_OBJECT
   and  obj_name eq P_TRANSTRU_LOW.

  if sy-subrc ne 0.

    select max( as4pos )
    into as4pos
    from e071
    where trkorr eq p_trkorr.

    as4pos   = as4pos + 1 .

    e071-trkorr = P_TRKORR.
    e071-as4pos = as4pos.
    e071-pgmid = P_PGMID.
    e071-object = P_OBJECT.
    e071-obj_name = P_TRANSTRU_LOW.

    insert into e071 values e071.

    select single * from tadir
     where pgmid = P_PGMID
     and object  = P_OBJECT
     and obj_name eq P_TRANSTRU_LOW.

    if sy-subrc eq 0 and tadir-devclass eq &apos;$TMP&apos;.
      tadir-devclass = p_devcl-low.
      modify tadir.
    endif.


  endif.


ENDFORM.                    &quot; add_to_transport
*&amp;---------------------------------------------------------------------*
*&amp;      Form  druk_logging
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      --&gt;P_ITAB2_ELTUID  text
*      --&gt;P_REQUEST  text
*----------------------------------------------------------------------*
FORM druk_logging  USING    P_ITAB2_ELTUID
                            P_REQUEST.

  case itab2-deftp.

    when &apos;REP&apos;.
      typetext = &apos;Query&apos;.
    when &apos;VAR&apos;.
      typetext = &apos;Variable&apos;.
    when &apos;STR&apos;.
      typetext = &apos;Structure&apos;.
    when &apos;SEL&apos;.
      typetext = &apos;Selection/Rest. KF&apos;.
    when &apos;CKF&apos;.
      typetext = &apos;Calculated Keyfigure&apos;.
    when &apos;FML&apos;.
      typetext = &apos;Formula&apos;.

  endcase.


  select single * from RSZELTTXT
  where eltuid = P_ITAB2_ELTUID
  and objvers = &apos;A&apos;
  and langu = &apos;EN&apos;.

*  concatenate typetext P_ITAB2_ELTUID RSZELTTXT-txtlg into string.

  write :/ typetext color col_total,  P_ITAB2_ELTUID, RSZELTTXT-txtlg
  color col_group.

ENDFORM.                    &quot; druk_logging
*&amp;---------------------------------------------------------------------*
*&amp;      Form  druk_header
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      --&gt;P_WB  text
*----------------------------------------------------------------------*
FORM druk_header  USING    P_WB.

  if p_qr eq &apos;X&apos;.

    select single * from RSZELTTXT
     where eltuid = P_WB
     and objvers = &apos;A&apos;
     and langu = &apos;EN&apos;.

    concatenate &apos;Query&apos; p_WB rszelttxt-txtlg into string separated by space
    .


  else.

    select single * from RSRWBINDEXT
    where langu = &apos;EN&apos;
    and workbookid = wb
    and objvers eq &apos;A&apos;.

    concatenate &apos;Workbook&apos; p_wb RSRWBINDEXT-TITLE into string separated by
    space.

  endif.

  if sy-subrc eq &apos;0&apos;.

    write :/ string  COLOR COL_HEADING .
    write :/.
  endif.


ENDFORM.                    &quot; druk_header</source>
</PROG>
